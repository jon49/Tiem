// Generated by LiveScript 1.2.0
var Option, JobSetting;
Option = require('./../../node_modules/fantasy-options/option');
JobSetting = require('./../models/JobSetting');
describe('How Job Setting model is used:', function(){
  var jobSetting;
  jobSetting = JobSetting.create(0, 'Job Name', true);
  describe('The function `create`', function(){
    var x$;
    x$ = it;
    x$('should create a new Job Setting plain object', function(){
      expect(jobSetting).toEqual({
        id: 0,
        name: 'Job Name',
        jobActive: true,
        ctor: 'JobSetting'
      });
    });
  });
  describe('The function `isSelf`', function(){
    var x$;
    x$ = it;
    x$('should determine if the object is JobSetting', function(){
      expect(JobSetting.isSelf(jobSetting)).toBe(true);
      expect(JobSetting.isSelf({
        not: 'Self'
      })).toBe(false);
    });
  });
  describe('The function `with`', function(){
    var x$;
    x$ = it;
    x$('should create a new object with updated name', function(){
      expect(JobSetting['with'](jobSetting, {
        name: 'New Job Name'
      })).toEqual({
        id: 0,
        name: 'New Job Name',
        jobActive: true,
        ctor: 'JobSetting'
      });
    });
    x$('should create a new object with updated jobActive', function(){
      expect(JobSetting['with'](jobSetting, {
        jobActive: false
      })).toEqual({
        id: 0,
        name: 'Job Name',
        jobActive: false,
        ctor: 'JobSetting'
      });
    });
  });
});